{
	"version": 3,
	"sources": [
		"/virtual/example/script/sample.es"
	],
	"names": [
		"Parent",
		"name",
		"console",
		"log",
		"Child",
		"parent",
		"child",
		"method",
		"f",
		"v",
		"a",
		"b",
		"hoge",
		"entries",
		"key",
		"value",
		"generator",
		"args",
		"arg",
		"arg2",
		"fetch",
		"response",
		"text",
		"length",
		"undefinedFunction"
	],
	"mappings": ";;;AAGA,CAAC,YAAY;AACHA,EAAAA,MADG;AAEL,oBAAYC,IAAZ,EAAkB;AACd,WAAKA,IAAL,GAAYA,IAAZ;AACH,KAJI;;AAMI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,GAAY,YAAxB;AACH,OARI;;;AAWHG,EAAAA,KAXG;AAYL,mBAAYH,IAAZ,EAAkB;AACR,mBAAaA,IADL;AAEjB,KAdI;;AAgBI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,GAAY,WAAxB;AACH,OAlBI,oBAWWD,MAXX;;;AAqBT,MAAMK,MAAM,GAAG,IAAIL,MAAJ,CAAW,MAAX,CAAf;AACA,MAAMM,KAAK,GAAG,IAAIF,KAAJ,CAAU,MAAV,CAAd;;AAEAC,EAAAA,MAAM,CAACE,MAAP;AACAD,EAAAA,KAAK,CAACC,MAAN;AACH,CA1BA,EAAD;;;;;AA+BA,CAAC,YAAY;AACT,MAAMC,CAAC,GAAG,SAAJA,CAAI,QAACC,CAAD,uEAAK,eAAL,QAAyBA,CAAzB,EAAV;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,EAAb;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAAC,MAAD,CAAb;AACH,CAJA,EAAD;;;;;AASA,CAAC,YAAY;AACT,MAAME,CAAC,GAAG,GAAV;AACA,MAAMC,CAAC,aAAMD,CAAN,WAAP;AACA,MAAME,IAAI,uCAAKF,CAAL,EAAS,GAAT,+BAAcC,CAAd,SAAV;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACH,CALA,EAAD;;;;;AAUA,CAAC,YAAY;AACT,MAAMC,OAAO,GAAG;AACZ,GAAC,MAAD,EAAS,QAAT,CADY;AAEZ,GAAC,MAAD,EAAS,QAAT,CAFY,CAAhB;;AAIA,8BAA2BA,OAA3B,8BAAoC,mDAAxBC,GAAwB,kBAAnBC,KAAmB;AAChCb,IAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ,EAAiBC,KAAjB;AACH;AACJ,CARA,EAAD;;;;;AAaA,CAAC,YAAY;AACCC,EAAAA,SADD,EACT,SAAUA,SAAV,2MAAuBC,IAAvB,oDAAuBA,IAAvB;AACsBA,YAAAA,IADtB,6DACeC,GADf;AAEQ,mBAAMA,GAAG,GAAG,CAAZ,CAFR,6FADS;;;;AAOUF,EAAAA,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPnB,aAOT,oDAAuC,KAA5BG,IAA4B;AACnCjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACH,KATQ;AAUZ,CAVA,EAAD;;;;;AAeA,CAAC;AAC0BC,YAAAA,KAAK,CAAC,IAAD,CAD/B,SACSC,QADT;AAEsBA,YAAAA,QAAQ,CAACC,IAAT,EAFtB,SAESA,IAFT;AAGGpB,UAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAI,CAACC,MAAjB,EAHH,6DAAD;;;;AAOAC,iBAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB",
	"sourcesContent": [
		"/**\n * class syntax\n */\n!function () {\n    class Parent {\n        constructor(name) {\n            this.name = name;\n        }\n\n        method() {\n            console.log(this.name + ' is parent');\n        }\n    }\n\n    class Child extends Parent {\n        constructor(name) {\n            super('[Child] ' + name);\n        }\n\n        method() {\n            console.log(this.name + ' is child');\n        }\n    }\n\n    const parent = new Parent('hoge');\n    const child = new Child('fuga');\n\n    parent.method();\n    child.method();\n}();\n\n/**\n * arrow function, default argument\n */\n!function () {\n    const f = (v = 'arrow default') => v;\n    console.log(f());\n    console.log(f('hoge'));\n}();\n\n/**\n * object literal, template literal\n */\n!function () {\n    const a = 'a';\n    const b = `${a} and b`;\n    const hoge = {[a]: 'A', b};\n    console.log(hoge);\n}();\n\n/**\n * for of, destructuring assignment\n */\n!function () {\n    const entries = [\n        ['key1', 'value1'],\n        ['key2', 'value2'],\n    ];\n    for (const [key, value] of entries) {\n        console.log(key, value);\n    }\n}();\n\n/**\n * generator, yield\n */\n!function () {\n    function* generator(...args) {\n        for (const arg of args) {\n            yield arg * 2;\n        }\n    }\n\n    for (const arg2 of generator(1, 2, 3)) {\n        console.log(arg2);\n    }\n}();\n\n/**\n * async, await\n */\n!async function () {\n    const response = await fetch('./');\n    const text = await response.text();\n    console.log(text.length);\n}();\n\n// errored. for source map confirmation\nundefinedFunction(1, 2, 3);\n"
	],
	"file": "/virtual/example/script/sample.js"
}